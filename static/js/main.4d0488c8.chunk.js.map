{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","autoComplete","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"gMAwCeA,MAtCf,SAAkBC,GAAQ,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAkBxB,OAhBAC,qBAAU,WACRF,EAASG,QAAQC,WAgBjB,uBAAMC,UAAU,YAAYC,SAVT,SAACC,GACpBA,EAAEC,iBACFZ,EAAMU,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAERC,EAAS,KAIT,UACE,uBACEe,KAAK,OACLC,YAAY,eACZC,MAAOlB,EACPmB,KAAK,OACLZ,UAAU,aACVa,SApBe,SAACX,GACpBR,EAASQ,EAAEY,OAAOH,QAoBdI,IAAKpB,EACLqB,aAAa,QAEf,wBAAQhB,UAAU,cAAlB,qBCUSiB,EAxCF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACxC7B,mBAAS,CAC/BY,GAAI,KACJO,MAAO,KAHuD,mBACzDW,EADyD,KACnDC,EADmD,KAchE,OAAID,EAAKlB,GACA,cAAC,EAAD,CAAUkB,KAAMA,EAAMrB,SATV,SAAAU,GACnBU,EAAWC,EAAKlB,GAAIO,GACpBY,EAAQ,CACNnB,GAAI,KACJO,MAAO,QAQJO,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACf,sBACE1B,UAAWyB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKrB,KAApD,SACGqB,EAAKjB,MADEiB,EAAKrB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACE4B,QAAS,kBAAMR,EAAWK,EAAKrB,KAC/BJ,UAAU,gBAEZ,cAAC,IAAD,CACE4B,QAAS,kBAAML,EAAQ,CAAEnB,GAAIqB,EAAKrB,GAAIO,MAAOc,EAAKjB,QAClDR,UAAU,mBAZT0B,OCuBIG,MA9Cf,WAAqB,IAAD,EACQrC,mBAAS,IADjB,mBACX0B,EADW,KACJY,EADI,KAgClB,OACE,gCACE,iDACA,cAAC,EAAD,CAAU7B,SAjCE,SAACwB,GACf,GAAKA,EAAKjB,OAAQ,QAAQuB,KAAKN,EAAKjB,MAApC,CAGA,IAAMwB,EAAQ,sBAAOd,GAAP,CAAcO,IAC5BK,EAASE,OA6BP,cAAC,EAAD,CACEd,MAAOA,EACPC,aAfe,SAACf,GACpB,IAAI6B,EAAef,EAAMM,KAAI,SAACC,GAI5B,OAHIA,EAAKrB,KAAOA,IACdqB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IASLb,WArBa,SAAChB,GAClB,IAAM8B,EAAY,YAAIhB,GAAOiB,QAAO,SAACV,GAAD,OAAUA,EAAKrB,KAAOA,KAC1D0B,EAASI,IAoBLb,WA9Ba,SAACe,EAAQC,GACrBA,EAAS7B,OAAQ,QAAQuB,KAAKM,EAAS7B,OAG5CsB,GAAS,SAACQ,GAAD,OACPA,EAAKd,KAAI,SAACe,GAAD,OAAWA,EAAKnC,KAAOgC,EAASC,EAAWE,eCP3CC,MARf,WACE,OACE,qBAAKxC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d0488c8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Things To Do\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n        autoComplete=\"off\"\n      />\n      <button className=\"todo-button\">Add</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport TodoForm from './TodoForm';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <AiOutlineCloseCircle\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <FaRegEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [...todos, todo];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return (\n    <div>\n      <h1>Get Things Done</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./TodoList\";\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}